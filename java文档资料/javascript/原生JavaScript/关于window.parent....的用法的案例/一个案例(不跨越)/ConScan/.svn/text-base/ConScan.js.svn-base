/**注释by gj**/
var ConScan = {};

//========创建人:吴波=====start=========


//------------start----------------

//执行扫描
function Scan(nScan)
{
	//创建一个文件
	createAFolder();
//	var r1 = DOcxtest1.SelectScanner("Uniscan F10A"); //选择扫描仪；本函数未执行前，程序会以系统默认扫描仪做为使用对象；
	// var r2 = DOcxtest1.SetAutoLevels(0);
	var ts = DOcxtest1.EnConnect(1); //连接到扫描仪，与disconnect 配合使用，请确保执行scan 函数前本函数已执行；
	var rt = DOcxtest1.SetScannerSource(1);  //设置扫描源；
	//alert(rt); //有问题
	/*
	DOcxtest1.SetScannerImageType(2); //设置扫描类型;
	DOcxtest1.SetThreshold(128); //设置扫描阈值，只在黑白扫描模式(二值模式)时起作用;
	DOcxtest1.SetScannerBright(-100); //设置扫描亮度；黑白模式时失效
	DOcxtest1.SetScannerContrast(0); //设置扫描对比度；黑白模式时失效
	DOcxtest1.SetScannerScanRgn(0,0,210,300);//设置扫描区域，单位：毫米；取值范围：420mm×600mm（A4 幅面为210×300）矩形范围由左上点位置和右下点位置决定;
	DOcxtest1.SetScanInvert(0);//设置取反色；本函数未执行前，默认为不取反色；
	DOcxtest1.SetScannerDPI(200); //设置扫描DPI;

	*/
	//================z这里非常重要======start==========
	DOcxtest1.SetScannerImageType(2);
	DOcxtest1.SetScannerScanRgn(0,0,210,300);
	DOcxtest1.SetScannerDPI(200);
	DOcxtest1.SetScanner(0,5,80,1,180);//见上
	DOcxtest1.SetCoverFile(0);
	
	/*
		设置扫描部分参数
		ImageIndex：文件名索引数，（如0，则完整的文件路径为X:\XXX\XX0000.xxx，后缀根据格式确定）
		FileType：图片文件格式类型
			-0为bmp
			-1为tiff
			-2为jpeg
			-3为gif
			-4为pdf
			-5为png
		文件名将根据此设定指定三位后缀
		nParam1 设置图像压缩比(JPG和TIF,PDF有效)取值为1~100;
		nParam2 设置是否生成多页文件(适用于PDF,TIF文件格式，ADF硬件条件)，0为生成单页文件，1为生成多页文件;
		Param3 设置图像旋转角度，取值0~360，旋转为右旋。
	*/
	var r10 = DOcxtest1.SetScanner(0,5,80,1,180);//见上
	/*
		设置是否覆盖同名文件；本函数未执行前，默认为不覆盖；
		返回值：BOOL 型，1代表正常，0 代表失败；
		参数[in]：BOOL型，是否覆盖同名文件，1为覆盖，0为不覆盖；

	*/
	var r11 = DOcxtest1.SetCoverFile(0); //见上
	/*
		说明：执行扫描功能
		返回值：返回值大于0 时表示扫描成功，当返回值大于1时，返回值即为扫描页数
		返回值为0 时扫描仪操作错误
		返回值为－1 时内存错误
		返回值为－2 时磁盘错误
		返回值为－3 时获取图像失败错误
		返回值为－4 时参数设置错误
		参数[in]：
		path： 指定扫描后文件的名字和输出路径（如：C:\TEST\），请确保设定的路径可写且已经存在;
		fileName：指定扫描文件名（如aaa）,无需设置文件后缀，后缀将根据图片格式自行设置;
	*/
	var tt = DOcxtest1.StartScanner("c:\\temp\\img\\", "image");
	//预览最后一张照片
	var ffn = DOcxtest1.GetFullFileName();
	var base = DOcxtest1.FileToBase64(ffn);
		//alert(base);
	var pictureImgId = document.getElementById("pictureImgId");
	//alert(Base64Image.src);
	pictureImgId.src = "data:image/tiff;base64," + base;
	var r3 = DOcxtest1.DisConnect(); //连接到扫描仪，与EnConnect 配合使用；
  
}

//获得所有的文件
function getAllFileName(){
	var filePath = "c:\\temp\\img";
	var fso ;
	try{
		fso = new ActiveXObject("Scripting.FileSystemObject");   //加载控件
	}catch(e){
		alert("对象不能创建,请修改IE安全设置，启用activex");
	}
	
	var f = fso.GetFolder(filePath);
	var underFiles = new Enumerator(f.files); //文件夹下文件
	for (;!underFiles.atEnd();underFiles.moveNext()){   
		var fn = "" + underFiles.item();   
		//alert(fn);
		var base = DOcxtest1.FileToBase64(fn);
		var flag = uploadToService(base);
		if(!flag){
			alert("该文件上传失败,请重新扫描上传");
		}
	}
	return fso;
}

//创建一个文件夹及
function createAFolder(){
	var fso, fldr, s = "";  
	 // 创建FileSystemObject对象实例  
	try{
		fso = new ActiveXObject("Scripting.FileSystemObject");   //加载控件
	}catch(e){
		alert("对象不能创建,请修改IE安全设置，启用activex");
	}
	try{
		 // 获取Drive 对象  
		fldr = fso.GetFolder("c:\\temp"); 
	}catch(e){
		// 创建新文件夹  
		fso.CreateFolder("c:\\temp"); 
	}
	try{
		fldr = fso.GetFolder("c:\\temp\\img"); 
	}catch(e){
		fso.CreateFolder ("c:\\temp\\img");  
	}
}

//判断文件夹是否存在,如果存在就将其删除
function judgeIsFolder(){
	var fldr,fso;
	try{
		fso = new ActiveXObject("Scripting.FileSystemObject");   //加载控件
	}catch(e){
		alert("对象不能创建,请修改IE安全设置，启用activex");
	}
	try{
		fldr = fso.GetFolder("c:\\temp\\img"); 
		fso.DeleteFolder ("c:\\temp\\img");
	}catch(e){}
	try{
		fldr = fso.GetFolder("c:\\temp"); 
		fso.DeleteFolder ("c:\\temp");
	}catch(e){}
}

//删除文件夹
function DeleteFolder(fso){
	//删除创建的文件夹  
	//alert("删除img文件夹");
	fso.DeleteFolder ("c:\\temp\\img"); 
}

//------------end----------------
////取消事件
//function cancelDOMActivate(event) {
//	al();
//	if(!saoflag){//紫光
//		
//	}else{
//		if(1==ocx.CloseScanner()){
//			alert("关闭中晶扫描仪成功！");
//		}
//	}
//	justep.xbl("ScanReceiver").windowCancel();
//}

//上传事件
ConScan.trigger10Click = function(event){
	//$(".commonDivClass").css("display","none");
	//$("#folderDivId").css("display","block");
	if(!saoflag){//紫光扫描仪
		var fso = getAllFileName();
		DeleteFolder(fso);
	}else{
		alert("使用中晶扫描仪已自动上传文件！");
	}

};

//将扫描的数据上传到服务器
function uploadToService(szBase64){
	var flag = false;
	justep.Request.sendBizRequest2({
		contentType: "application/json",
		dataType: "application/json",
		action: "FileUploadTool",
		parameters: {
			file:szBase64,
			fileName:'',
			fDocLink:''
		},
		callback: function(result) {
			if(JSON.parse(result.state)){
				flag = true;
				var data = {"fDocLink":result.response};
				justep.xbl("ScanReceiver").windowEnsure(data);
				justep.xbl("ScanReceiver").windowCancel();
			}else{
//				throw new Error(result.response);
				alert(result.response);
			}
		}
	});
	return flag;
}


//========创建人:吴波=====end=========
//true开启中晶扫描仪 false 开启紫光扫描仪
var saoflag = true;
//初始化函数
ConScan.mdMainReady = function(event){
	//中晶扫描仪
	try {
//		alert(1);
		ocx.CloseScanner();	
		alert(ocx.GetState());
		ocx.DSMode(0);
        var pp= ocx.openScanner();
        if(1==pp){
             alert("中晶扫描仪开启成功！");
             ocx.SetScan();
        }else{
			var Error = ocx.GetErrorCode();
			alert("中晶扫描仪开启失败！错误编码："+Error);
			saoflag = false;
		}
	} catch (e) {
		saoflag = false;
	}
	if(!saoflag){//开启紫光扫描仪
		var tt = DOcxtest1.LoadDll(); //加载要封装的dll文件
		var r1 = DOcxtest1.SelectScanner(""); //选择扫描仪；本函数未执行前，程序会以系统默认扫描仪做为使用对象；
	}
	
	
};

//扫描函数
ConScan.trigger8Click = function(event){
	//中晶扫描仪
	try {
		ocx.CloseScanner();
		ocx.DSMode(0);
        var pp= ocx.openScanner();
        if(1==pp){
             alert("中晶扫描仪开启成功！");
             ocx.SetScan();
             
             ocx.SetScanResolution(200);//dpi 200
             ocx.SetScanPixelType(1);//0 黑白 1 灰阶 2 彩色
             ocx.SetAutoCrop(1);//开启自动节选
             ocx.SetAutoDeskew(1);//开启自动纠偏
             ocx.SetAutoDiscardBlankPages(-1);//自动去除空白页
             ocx.SetMaterial(0);//扫描普通纸
             ocx.SetAutoScan(1);//自动扫描
             ocx.SetBlackBorderRemoval(1);//黑边补白
             ocx.SetPunchHoleRemoval(1);//装订孔补白
             ocx.SetScanSourceType(2);//0平板 1单面  2双面扫描
              if (1==ocx.Scan(-1,0))
              {
//            	  var base = ocx.GetImageBase64String();
//            	  if(!uploadToService(base)){
//            		  alert("上传失败");
//            	  }
//            	  var pictureImgId = document.getElementById("pictureImgId");
//            	  pictureImgId.src = "data:image/tiff;base64," + base;
            	  var img_count=ocx.GetScanImageCount();
            	  alert("扫描成功,共计"+img_count+"张");
              }
        }else{
			var Error = ocx.GetErrorCode();
			alert("中晶扫描仪开启失败！错误编码："+Error);
			saoflag = false;
		}
	} catch (e) {
		saoflag = false;
	}
	if(!saoflag){//开启紫光扫描仪
		var tt = DOcxtest1.LoadDll(); //加载要封装的dll文件
		var r1 = DOcxtest1.SelectScanner(""); //选择扫描仪；本函数未执行前，程序会以系统默认扫描仪做为使用对象；
		Scan(0);
	}
	
};

//重扫函数
ConScan.trigger9Click = function(event){
	//中晶扫描仪
	try {
		ocx.CloseScanner();
		ocx.DSMode(0);
        var pp= ocx.openScanner();
        if(1==pp){
             alert("中晶扫描仪开启成功！");
             ocx.SetScan();
             
             ocx.SetScanResolution(200);//dpi 200
             ocx.SetScanPixelType(1);//0 黑白 1 灰阶 2 彩色
             ocx.SetAutoCrop(1);//开启自动节选
             ocx.SetAutoDeskew(1);//开启自动纠偏
             ocx.SetAutoDiscardBlankPages(-1);//自动去除空白页
             ocx.SetMaterial(0);//扫描普通纸
             ocx.SetAutoScan(1);//自动扫描
             ocx.SetBlackBorderRemoval(1);//黑边补白
             ocx.SetPunchHoleRemoval(1);//装订孔补白
             ocx.SetScanSourceType(2);//0平板 1单面  2双面扫描
              if (1==ocx.Scan(-1,0))
              {
//            	  var base = ocx.GetImageBase64String();
//            	  if(!uploadToService(base)){
//            		  alert("上传失败");
//            	  }
//            	  var pictureImgId = document.getElementById("pictureImgId");
//            	  pictureImgId.src = "data:image/tiff;base64," + base;
            	  var img_count=ocx.GetScanImageCount();
            	  alert("扫描成功,共计"+img_count+"张");
              }
        }else{
			var Error = ocx.GetErrorCode();
			alert("中晶扫描仪开启失败！错误编码："+Error);
			saoflag = false;
		}
	} catch (e) {
		saoflag = false;
	}
	if(!saoflag){//开启紫光扫描仪
		var tt = DOcxtest1.LoadDll(); //加载要封装的dll文件
		var r1 = DOcxtest1.SelectScanner(""); //选择扫描仪；本函数未执行前，程序会以系统默认扫描仪做为使用对象；
		judgeIsFolder();
		Scan(0);
	}
//	judgeIsFolder();
//	Scan(0);
};

//取消函数
ConScan.trigger11Click = function(event){
	if(!saoflag){//紫光
		
	}else{
		if(1==ocx.CloseScanner()){
			alert("关闭中晶扫描仪成功！");
		}
	}
	justep.xbl("ScanReceiver").windowCancel();
//	if(!saoflag){
//		judgeIsFolder();
//		
//	}
//	justep.xbl("ScanReceiver").windowCancel();
//	judgeIsFolder();
//	justep.xbl("ScanReceiver").windowCancel();
};
/**注释by gj**/




