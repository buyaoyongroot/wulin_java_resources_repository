<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ajx="http://www.ajaxforms.net/2006/ajx" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" style="height:100%;width:100%;" version="2.0">  
  <head> 
    <link href="/form/xforms/xforms.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/calendar.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/showMessage.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxGrid/dhtmlx_grid.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxWindows/skins/dhtmlx_window.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxMenu/skins/dhtmlxmenu_glassy_blue.css" rel="stylesheet" type="text/css"></link>  
    <script src="/base/base.js" type="text/javascript">
</script>      <script src="/base/base.res.js" type="text/javascript">
</script>      <script src="/form/form.res.js" type="text/javascript">
</script>      <script src="/form/form.js" type="text/javascript">
</script>      <script language="javascript" src="/UI/system/resources/system.res.js">
</script>      <script language="javascript" src="/component/data/data.js">
</script>      <style rel="stylesheet" type="text/css">.borderLayout { overflow: hidden; } .xui-borderlayout-root { position: relative; width: 100%; height: 100%; overflow: hidden; } .xui-borderlayout-area { position: absolute; /*overflow: hidden;*/ } .xui-borderlayout-top { top:0; left:0; width:100%; height:100px; } .xui-borderlayout-left { top:100px; left:0; width:100px; height:100px; } .xui-borderlayout-right { top:100px; right:0; width:100px; height:100px; } .xui-borderlayout-bottom { left:0; bottom:0; width:100%; height:100px; } .xui-borderlayout-center { top: 0; left:0; width:100%; height:100%; } .xui-borderlayout-border { position: absolute; background-color: white; } .xui-borderlayout-border-top { top: 95px; left: 0; width: 100%; height: 5px; } .xui-borderlayout-border-left { top: 100px; left: 95px; width: 0; height: 100px; } .xui-borderlayout-border-right { top: 100px; right: 150px; width: 0; height: 100px; } .xui-borderlayout-border-bottom { bottom: 150px; left: 0; width: 100%; height: 0; }</style>  
    <style rel="stylesheet" type="text/css"></style>  
    <script language="javascript" src="/UI/system/components/windowReceiver/windowReceiver.js">
</script>      <meta content="ajaxforms" http-equiv="Media-Type"></meta>      <meta content="AJAX, Javascript, Web, XForms, XSLTForms, Exemples, Samples" name="keywords"></meta>      <link href="/UI/system/icons/system.icon.css" rel="stylesheet" type="text/css"></link>      <script>

			onerror = pageErrorHandler;
			function pageErrorHandler(msg, url, line, stack) {
				msg = ('string'==typeof(msg) &amp;&amp; msg)? msg.replace(/Uncaught Error:/,''):'未知错误';
				msg = justep.String.trim(msg);
				if (msg.substring(0,1) == "{"){
					/*认为是json格式的数据*/
					var msgs = JSON.parse(msg);
					var code = msgs.code;
					var message = msgs.message;
					var reason = msgs.reason;
					var messages = msgs.messages;
					var javaStack = msgs.stack;
					var javaUrl = msgs.url
					var javaParam = msgs.param;
					if (code!=null &amp;&amp; code!=undefined &amp;&amp; code!=""){
						message = code + ", " + message;
					}
					var detail = "";
					if (javaStack){
						detail += javaStack; 
					} 
					if (javaUrl){
						detail += '\n\r url:' + javaUrl;
						if (javaParam){
							detail += '\n\r param:' + javaParam;
						}
					}
					if(url){
						detail += ('\n at ('+url); 
						if(line) detail += (':'+line); 
						detail += ')';
					}
					if(stack) detail += stack;	
					(new justep.System.showMessage()).open({"width":600,"msg":message,"details":detail,"title":"提示", "reason": reason, "messages": messages});
					return true;
				}else{
					var msgs = msg.split("|");
					if(justep.System.showMessage) {
						var msg = msgs.length &gt; 0 ? msgs[0] : "";
						var detail = msgs.length &gt; 1 ? (msgs[1] == "" ? msg : msgs[1]) : msg;
						if(url){detail += ('\n at ('+url); if(line) detail += (':'+line); detail += ')';}
						if(stack) detail += ('\n'+stack);
						(new justep.System.showMessage()).open({"width":600,"msg":msg,"details":detail,"title":"提示"});
						return true;
					} else {
						alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
						return false;
					}
				}
				var msgs = msg.split("|");
				if(justep.System.showMessage) {
					var tip = "";
					var reason = "";
					var others = "";
					var messages = "";
					if (msgs.length == 1){
						tip = msgs[0];
						reason = "";
						messages = "";
						others = "";					
					}else if (msgs.length == 2){
						tip = msgs[0];
						reason = "未知";
						messages = "";
						others = msgs[1];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = "";
						others = msgs[2];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2]
						others = msgs[3];
					}else {
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2]
						others = msgs[3];
					}
					if(url){
						others += ('\n at ('+url); 
						if(line) others += (':'+line); 
						others += ')';
					}
					if(stack){ 
						others += ('\n'+stack);
					}	
					(new justep.System.showMessage()).open({"width":600,"msg":tip,"details":others,"title":"提示","reason":reason,"messages":messages});
					return true;
				} else {
					alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
					return false;
				}
			}
			var _closeActivityed = false;
			function _closeActivity_(){
				window._noShowSessionTimeOut_ = true;
				if (!_closeActivityed){
					_closeActivityed = true;
					var log = justep.Context.getRequestParameter("log"); 
					if (log==1 || log=="1"){
						var process = justep.Context.getCurrentProcess();
						var activity = justep.Context.getCurrentActivity();
						var executor = justep.Context.getExecutor();
						if (process!=null &amp;&amp; activity!=null){
							var xmlHttpRequest = justep.Request.sendBizRequest(process, activity, "closeActivityAction", "", null, function(data){}, true, executor);
						}
					}else{
					}
				}
			}
			function _close_(){
				_closeActivity_();				
			}</script>  
    <link href="/UI/system/config/user.css" rel="stylesheet" type="text/css"></link>  
    <script id="htmlScript1" src="/UI/ED/doc/process/dialog/ConScan/ConScan.js">
</script>      <script src="/UI/system/components/windowDialog/FrameWindow.js">
</script>      <script id="htmlScript2" src="/UI/ED/doc/process/dialog/ConCamera/ConCamera.js">
</script>      <script>
new justep.XCommonData('colors',true,false,null,'','',{'deleteConfirm':true,'refreshConfirm':true,'refreshConfirmText':"xml"}, {});</script>  
    <script>
new justep.XCommonData('colorsSelect',true,false,null,'','',{'deleteConfirm':true,'refreshConfirm':true,'refreshConfirmText':"xml"}, {});</script>  
    <script>
new justep.XCommonData('scanType',true,false,null,'','',{'deleteConfirm':true,'refreshConfirm':true,'refreshConfirmText':"xml"}, {});</script>  
    <script>
new justep.XCommonData('scanTypeSelect',true,false,null,'','',{'deleteConfirm':true,'refreshConfirm':true,'refreshConfirmText':"xml"}, {});</script>  
    <script id="xbl_script" language="javascript">
__initXBL__ = function(){	justep.XBLObject._registerClasses = function() {
justep.XBLObject._classes["/UI/system/components/window.xbl.xml#window"] = _xbl_JSClassDefine_window;
justep.XBLObject._classes["/UI/system/components/windowReceiver.xbl.xml#windowReceiver"] = _xbl_JSClassDefine_windowReceiver;
justep.XBLObject._classes["/UI/system/components/borderLayout.xbl.xml#borderLayout"] = _xbl_JSClassDefine_borderLayout;
justep.XBLObject._classes["/UI/system/components/trigger.xbl.xml#trigger"] = _xbl_JSClassDefine_trigger;
 };
justep.XBLObject._registerClasses();function _xbl_JSClassDefine_window(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_window.prototype = justep.Object.extend(new justep.XBLObject(), eval({}));

function _xbl_JSClassDefine_windowReceiver(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_windowReceiver.prototype = justep.Object.extend(new justep.XBLObject(), eval({
			"initXBL" : function() {
				this.domNode._xblObject.initXBL();
			},
			"initXBL2" : function() {
				this.domNode._xblObject.initXBL2();
			}
		}));

function _xbl_JSClassDefine_borderLayout(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_borderLayout.prototype = justep.Object.extend(new justep.XBLObject(), eval({

			"initXBL" : function() {
			   	if(!this.domNode.id || this.domNode.id ==""){
					this.domNode.id = (new UUID()).valueOf();
			   	}
			   	var baseCls = '.xui-borderlayout-';
			   	var id = this.domNode.id; 
			   	this.el = $("#" + id);
			   	this.rootEl = $("#" + id + " &gt; div");
			   	this.topEl = $("#" + id + " &gt; div &gt; " + baseCls + "top");
			   	this.leftEl = $("#" + id + " &gt; div &gt; " + baseCls + "left");
			   	this.rightEl = $("#" + id + " &gt; div &gt; " + baseCls + "right");
			   	this.bottomEl = $("#" + id + " &gt; div &gt; " + baseCls + "bottom");
			   	this.centerEl = $("#" + id + " &gt; div &gt; " + baseCls + "center");
			   	this.topBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-top");
			   	this.leftBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-left");
			   	this.rightBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-right");
			   	this.bottomBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-bottom");
			   	this.onWindowResize();
			},
			onWindowResize: function(){
				var b = parseFloat(this.rootEl.attr('borderSize')),
					top = left = right = bottom = 0,
					w = this.el.width()-2*b, h = this.el.height()-2*b,
					bp = function(el, isHeight){
						return isHeight? (el.outerHeight()-el.height()): (el.outerWidth()-el.width());
					},
					size = function(el, isHeight){
						var value = el.attr('size');
						if(value!='auto'){
							value = parseFloat(value) - bp(el, isHeight);
						}
						return value;
					},
					area = $(" &gt;.xui-borderlayout-area", this.rootEl);

/*				area.css({overflow:'hidden'});	
				area.css({overflow:'auto'});
*/				
				this.rootEl.height(h);
				this.rootEl.width(w);
				this.rootEl.css({top: b, left:b});					
				if(this.topEl.get(0)){
					this.topEl.css({top: top, left:left});
					this.topEl.height(size(this.topEl, true));
					this.topEl.width(w - bp(this.topEl));
					top = this.topEl.outerHeight();
					if(this.topBorderEl.get(0)){
						this.topBorderEl.css({top: top,left:left});
						top += this.topBorderEl.height();
					} 
				}
				if(this.leftEl.get(0)){
					this.leftEl.css({top: top, left:left});
					this.leftEl.width(size(this.leftEl));
					left = this.leftEl.outerWidth(); 
					if(this.leftBorderEl.get(0)){
						this.leftBorderEl.css({top: top, left: left});
						left += this.leftBorderEl.width(); 
					} 
				}
				if(this.rightEl.get(0)){
					this.rightEl.css({top: top, right:right});
					this.rightEl.width(size(this.rightEl));
					right = this.rightEl.outerWidth(); 
					if(this.rightBorderEl.get(0)){
						this.rightBorderEl.css({top: top,right: right});
						right += this.rightBorderEl.width();
					} 
				}
				if(this.bottomEl.get(0)){
					this.bottomEl.height(size(this.bottomEl, true));
					this.bottomEl.width(w - bp(this.bottomEl));
					bottom = this.bottomEl.outerHeight(); 
					if(this.bottomBorderEl.get(0)){
						this.bottomBorderEl.css({left:0, bottom: bottom});
						bottom += this.bottomBorderEl.height();  
					} 
				}
				this.centerEl.css({top: top, left: left});
				this.centerEl.width(w - left - right - bp(this.centerEl));
				h = h - top - bottom;
				this.leftEl.height(h - bp(this.leftEl, true));  
				this.centerEl.height(h - bp(this.centerEl, true));  
				this.rightEl.height(h - bp(this.rightEl, true));
				this.leftBorderEl.height(h);  
				this.rightBorderEl.height(h);
			}   	
		}));

function _xbl_JSClassDefine_trigger(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_trigger.prototype = justep.Object.extend(new justep.XBLObject(), eval({	
			"initXBL" : function() {
				this.$el = $(this.domNode);
				justep.Utils.proxable(this, this.domNode.xformsObject, xforms.XFTrigger);
			},
			"initXBL2" : function() {
				this.domNode.xformsObject.initOperation();
			}
		}));

	var ids=[{id:'cameraWindowId', name:'/UI/system/components/window.xbl.xml#window', children:[{id:'borderLayout1', name:'/UI/system/components/borderLayout.xbl.xml#borderLayout', children:[{id:'ScanReceiver', name:'/UI/system/components/windowReceiver.xbl.xml#windowReceiver'},{id:'openPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default2', name:'xforms:label'}]},{id:'setPin1', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default3', name:'xforms:label'}]},{id:'setPin2', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default4', name:'xforms:label'}]},{id:'closePic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default5', name:'xforms:label'}]},{id:'firstPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default7', name:'xforms:label'}]},{id:'upPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default8', name:'xforms:label'}]},{id:'nextPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default9', name:'xforms:label'}]},{id:'lastPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default10', name:'xforms:label'}]},{id:'xuanZhuanPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default11', name:'xforms:label'}]},{id:'deletePic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default12', name:'xforms:label'}]},{id:'uploadPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default13', name:'xforms:label'}]},{id:'cancelP', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default14', name:'xforms:label'}]},{id:'upMove', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default1', name:'xforms:label'}]},{id:'nextMove', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default15', name:'xforms:label'}]},{id:'fasterSao', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default16', name:'xforms:label'}]},{id:'getPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default6', name:'xforms:label'}]},{id:'picColor', name:'xforms:gridselect1', children:[{id:'default29', name:'xforms:label'},{id:'default30', name:'xforms:value'},{id:'default32', name:'xforms:ext-value'}]},{id:'textTo', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default17', name:'xforms:label'}]},{id:'fileScan', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default18', name:'xforms:label'}]},{id:'fileScanClose', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default19', name:'xforms:label'}]},{id:'gridSelect2', name:'xforms:gridselect1', children:[{id:'default61', name:'xforms:label'},{id:'default62', name:'xforms:value'}]},{id:'SoScan', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default40', name:'xforms:label'}]},{id:'openOldScan', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default41', name:'xforms:label'}]},{id:'oldScan', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default42', name:'xforms:label'}]},{id:'getOldPic', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default45', name:'xforms:label'}]}]}]}]; 
justep.XBLObject.initXBL(ids);
}; </script>  
    <script id="xf_script" type="text/javascript">
xforms.Core.fileName='form.js';	
xf._a(null,'openPic');xf._a('openPic','default2');xf._a(null,'setPin1');xf._a('setPin1','default3');xf._a(null,'setPin2');xf._a('setPin2','default4');xf._a(null,'closePic');xf._a('closePic','default5');xf._a(null,'firstPic');xf._a('firstPic','default7');xf._a(null,'upPic');xf._a('upPic','default8');xf._a(null,'nextPic');xf._a('nextPic','default9');xf._a(null,'lastPic');xf._a('lastPic','default10');xf._a(null,'xuanZhuanPic');xf._a('xuanZhuanPic','default11');xf._a(null,'deletePic');xf._a('deletePic','default12');xf._a(null,'uploadPic');xf._a('uploadPic','default13');xf._a(null,'cancelP');xf._a('cancelP','default14');xf._a(null,'upMove');xf._a('upMove','default1');xf._a(null,'nextMove');xf._a('nextMove','default15');xf._a(null,'fasterSao');xf._a('fasterSao','default16');xf._a(null,'getPic');xf._a('getPic','default6');xf._a(null,'picColor');xf._a('picColor','default29');xf._a('picColor','default31');xf._a(null,'textTo');xf._a('textTo','default17');xf._a(null,'fileScan');xf._a('fileScan','default18');xf._a(null,'fileScanClose');xf._a('fileScanClose','default19');xf._a(null,'gridSelect2');xf._a('gridSelect2','default61');xf._a('gridSelect2','default63');xf._a(null,'SoScan');xf._a('SoScan','default40');xf._a(null,'openOldScan');xf._a('openOldScan','default41');xf._a(null,'oldScan');xf._a('oldScan','default42');xf._a(null,'getOldPic');xf._a('getOldPic','default45');function init() {	
var begin = new Date().getTime();	
xf._b("instance('colors')/typeName",xf._g(xf._f('instance',xf._i("colors")),xf._h(false, xf._k("child",xf._j('','typeName')))));	
xf._b("instance('colors')/typeValue",xf._g(xf._f('instance',xf._i("colors")),xf._h(false, xf._k("child",xf._j('','typeValue')))));	
xf._b("instance('scanType')/typeName",xf._g(xf._f('instance',xf._i("scanType")),xf._h(false, xf._k("child",xf._j('','typeName')))));	
xf._b("instance('scanType')/typeValue",xf._g(xf._f('instance',xf._i("scanType")),xf._h(false, xf._k("child",xf._j('','typeValue')))));	
xf._b("data('colors')/typeValue",xf._g(xf._f('data',xf._i("colors")),xf._h(false, xf._k("child",xf._j('','typeValue')))));	
xf._b("data('colors')/typeName",xf._g(xf._f('data',xf._i("colors")),xf._h(false, xf._k("child",xf._j('','typeName')))));	
xf._b("typeName",xf._h(false, xf._k("child",xf._j('','typeName'))));	
xf._b("typeValue",xf._h(false, xf._k("child",xf._j('','typeValue'))));	
xf._b("__c_",xf._h(false, xf._k("child",xf._j('','__c_'))));	
xf._b("data('scanType')/typeValue",xf._g(xf._f('data',xf._i("scanType")),xf._h(false, xf._k("child",xf._j('','typeValue')))));	
xf._b("data('scanType')/typeName",xf._g(xf._f('data',xf._i("scanType")),xf._h(false, xf._k("child",xf._j('','typeName')))));	
var xf_model_mdMain = new xforms.XFModel('mdMain',null);	
var xf_action_action5=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.mdMainReady(event)}));xf._p(justep('mdMain'),"xforms-ready",null,function(evt) { xforms.run(xf_action_action5,'mdMain', evt,false)});	
new xforms.XFInstance2('colors','mdMain',null,'&lt;rows id="default22"&gt;&lt;row id="default23"&gt;&lt;cell id="default24"&gt;黑白&lt;/cell&gt;&lt;cell id="default25"&gt;1&lt;/cell&gt;&lt;/row&gt;&lt;row id="default26"&gt;&lt;cell id="default27"&gt;彩色&lt;/cell&gt;&lt;cell id="default28"&gt;2&lt;/cell&gt;&lt;/row&gt;&lt;/rows&gt;',null,null,null,null,null,null,null,null,null);new SimpleStore('colors','typeName,typeValue');	
xf._c('xf-bind-0','mdMain',"instance('colors')/typeName",null,null,null,null,null,null,null);	
xf._c('xf-bind-1','mdMain',"instance('colors')/typeValue",null,null,null,null,null,null,null);	
new xforms.XFInstance2('colorsSelect','mdMain',null,'&lt;rows id="default33"&gt;&lt;row id="default34"&gt;&lt;cell id="default35"&gt;黑白&lt;/cell&gt;&lt;cell id="default36"&gt;1&lt;/cell&gt;&lt;/row&gt;&lt;row id="default37"&gt;&lt;cell id="default38"&gt;彩色&lt;/cell&gt;&lt;cell id="default39"&gt;2&lt;/cell&gt;&lt;/row&gt;&lt;/rows&gt;',null,null,null,null,null,null,null,null,null);	
new xforms.XFInstance2('scanType','mdMain',null,'&lt;rows id="default47"&gt;&lt;row id="default48"&gt;&lt;cell id="default49"&gt;单面&lt;/cell&gt;&lt;cell id="default50"&gt;1&lt;/cell&gt;&lt;/row&gt;&lt;row id="default51"&gt;&lt;cell id="default52"&gt;双面&lt;/cell&gt;&lt;cell id="default53"&gt;2&lt;/cell&gt;&lt;/row&gt;&lt;/rows&gt;',null,null,null,null,null,null,null,null,null);new SimpleStore('scanType','typeName,typeValue');	
xf._c('xf-bind-2','mdMain',"instance('scanType')/typeName",null,null,null,null,null,null,null);	
xf._c('xf-bind-3','mdMain',"instance('scanType')/typeValue",null,null,null,null,null,null,null);	
new xforms.XFInstance2('scanTypeSelect','mdMain',null,'&lt;rows id="default54"&gt;&lt;row id="default60"&gt;&lt;cell id="default57"&gt;单面&lt;/cell&gt;&lt;cell id="default59"&gt;1&lt;/cell&gt;&lt;/row&gt;&lt;row id="default55"&gt;&lt;cell id="default58"&gt;双面&lt;/cell&gt;&lt;cell id="default56"&gt;2&lt;/cell&gt;&lt;/row&gt;&lt;/rows&gt;',null,null,null,null,null,null,null,null,null);new SimpleStore('scanTypeSelect','typeName,typeValue');	
xforms.load_parts('view2');	
xforms.load_parts('view1');	
xforms.DebugConsole.writeTime(begin, 'new js objects');	
begin = new Date().getTime();	
xforms.init();	
xforms.DebugConsole.writeTime(begin, 'xforms init');};	
function load_view2(){if (justep("view2").getAttribute('loaded') &amp;&amp; justep("view2").getAttribute('loaded') == 'true') return;justep("view2").setAttribute('loaded', 'true');	
if(typeof(load_view2_html) == 'function')load_view2_html();	
}	
function load_view2_xblinit(){if (justep("view2").getAttribute('xblloaded') &amp;&amp; justep("view2").getAttribute('xblloaded') == 'true') return;justep("view2").setAttribute('xblloaded', 'true');	
}	
function load_view1(){if (justep("view1").getAttribute('loaded') &amp;&amp; justep("view1").getAttribute('loaded') == 'true') return;justep("view1").setAttribute('loaded', 'true');	
if(typeof(load_view1_html) == 'function')load_view1_html();	
var xf_trigger_openPic=new xforms.XFTrigger('openPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action14=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.openPicClick(event)}));xf._p(justep('openPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action14,'openPic', evt,false)});	
var xf_trigger_setPin1=new xforms.XFTrigger('setPin1',null,null,null,false,false,false,null,null,null);	
var xf_action_action15=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.setPin1Click(event)}));xf._p(justep('setPin1'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action15,'setPin1', evt,false)});	
var xf_trigger_setPin2=new xforms.XFTrigger('setPin2',null,null,null,false,false,false,null,null,null);	
var xf_action_action16=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.setPin2Click(event)}));xf._p(justep('setPin2'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action16,'setPin2', evt,false)});	
var xf_trigger_closePic=new xforms.XFTrigger('closePic',null,null,null,false,false,false,null,null,null);	
var xf_action_action17=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.closePicClick(event)}));xf._p(justep('closePic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action17,'closePic', evt,false)});	
var xf_trigger_firstPic=new xforms.XFTrigger('firstPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action4=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.firstPicClick(event)}));xf._p(justep('firstPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action4,'firstPic', evt,false)});	
var xf_trigger_upPic=new xforms.XFTrigger('upPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action7=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.upPicClick(event)}));xf._p(justep('upPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action7,'upPic', evt,false)});	
var xf_trigger_nextPic=new xforms.XFTrigger('nextPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action10=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.nextPicClick(event)}));xf._p(justep('nextPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action10,'nextPic', evt,false)});	
var xf_trigger_lastPic=new xforms.XFTrigger('lastPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action11=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.lastPicClick(event)}));xf._p(justep('lastPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action11,'lastPic', evt,false)});	
var xf_trigger_xuanZhuanPic=new xforms.XFTrigger('xuanZhuanPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action12=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.xuanZhuanPicClick(event)}));xf._p(justep('xuanZhuanPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action12,'xuanZhuanPic', evt,false)});	
var xf_trigger_deletePic=new xforms.XFTrigger('deletePic',null,null,null,false,false,false,null,null,null);	
var xf_action_action13=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.deletePicClick(event)}));xf._p(justep('deletePic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action13,'deletePic', evt,false)});	
var xf_trigger_uploadPic=new xforms.XFTrigger('uploadPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action1=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.uploadPicClick(event)}));xf._p(justep('uploadPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action1,'uploadPic', evt,false)});	
var xf_trigger_cancelP=new xforms.XFTrigger('cancelP',null,null,null,false,false,false,null,null,null);	
var xf_action_action3=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.cancelPClick(event)}));xf._p(justep('cancelP'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action3,'cancelP', evt,false)});	
var xf_trigger_upMove=new xforms.XFTrigger('upMove',null,null,null,false,false,false,null,null,null);	
var xf_action_action8=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.upMoveClick(event)}));xf._p(justep('upMove'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action8,'upMove', evt,false)});	
var xf_trigger_nextMove=new xforms.XFTrigger('nextMove',null,null,null,false,false,false,null,null,null);	
var xf_action_action9=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.nextMoveClick(event)}));xf._p(justep('nextMove'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action9,'nextMove', evt,false)});	
var xf_trigger_fasterSao=new xforms.XFTrigger('fasterSao',null,null,null,false,false,false,null,null,null);	
var xf_action_action2=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.fasterSaoClick(event)}));xf._p(justep('fasterSao'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action2,'fasterSao', evt,false)});	
var xf_trigger_getPic=new xforms.XFTrigger('getPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action18=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.getPicClick(event)}));xf._p(justep('getPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action18,'getPic', evt,false)});	
new xforms.XFExtSelect({id:'picColor',type:'gridselect1',defaultLabelRef:null,allSelectedLabelRef:null,ref:xf._q("data('colors')/typeValue"),labelRef:xf._q("data('colors')/typeName"),extRef:null,valueSeparator:',',labelSeparator:',',extSeparator:',',dataId:'colorsSelect',columns:'typeName,typeValue,__c_',headerH:null,rowH:'20',dropdownClass:'xui-grid-hide-VLine',hiddenColumns:'typeValue',valueColumn:'typeValue',labelColumn:'typeName',extColumn:null,labels:',,',aligns:',,',types:'ro,ro,ro',widths:{widths:"#,#,*",total:0},height:'',dropdownWidth:'',appearance:null,delay:false,autoLoadData:true,independence:false,delayCreateGrid:false,cascade:false,dataXML:null,inputChangeable:false,disabled:false,readonly:false,smartRender:null,onAfterRowFill:null,onRowDisabled:null,onShowNodeImg:null,onRowExpand:null,onRowHasChildren:null,onKeyDown:null,onKeyUp:null,onKeyPress:null,onDropdown:null,onCloseup:null});	
var xf_trigger_textTo=new xforms.XFTrigger('textTo',null,null,null,false,false,false,null,null,null);	
var xf_action_action19=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConScan.textToClick(event)}));xf._p(justep('textTo'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action19,'textTo', evt,false)});	
var xf_trigger_fileScan=new xforms.XFTrigger('fileScan',null,null,null,false,false,false,null,null,null);	
var xf_action_action20=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.fileScanClick(event)}));xf._p(justep('fileScan'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action20,'fileScan', evt,false)});	
var xf_trigger_fileScanClose=new xforms.XFTrigger('fileScanClose',null,null,null,false,false,false,null,null,null);	
var xf_action_action6=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.fileScanCloseClick(event)}));xf._p(justep('fileScanClose'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action6,'fileScanClose', evt,false)});	
new xforms.XFExtSelect({id:'gridSelect2',type:'gridselect1',defaultLabelRef:null,allSelectedLabelRef:null,ref:xf._q("data('scanType')/typeValue"),labelRef:xf._q("data('scanType')/typeName"),extRef:null,valueSeparator:',',labelSeparator:',',extSeparator:',',dataId:'scanTypeSelect',columns:'typeName,typeValue,__c_',headerH:null,rowH:'20',dropdownClass:'xui-grid-hide-VLine',hiddenColumns:'typeValue',valueColumn:'typeValue',labelColumn:'typeName',extColumn:null,labels:',,',aligns:',,',types:'ro,ro,ro',widths:{widths:"#,#,*",total:0},height:'',dropdownWidth:'',appearance:null,delay:false,autoLoadData:true,independence:false,delayCreateGrid:false,cascade:false,dataXML:null,inputChangeable:false,disabled:false,readonly:false,smartRender:null,onAfterRowFill:null,onRowDisabled:null,onShowNodeImg:null,onRowExpand:null,onRowHasChildren:null,onKeyDown:null,onKeyUp:null,onKeyPress:null,onDropdown:null,onCloseup:null});	
var xf_trigger_SoScan=new xforms.XFTrigger('SoScan',null,null,null,false,false,false,null,null,null);	
var xf_action_action21=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.SoScanClick(event)}));xf._p(justep('SoScan'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action21,'SoScan', evt,false)});	
var xf_trigger_openOldScan=new xforms.XFTrigger('openOldScan',null,null,null,false,false,false,null,null,null);	
var xf_action_action23=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.openOldScanClick(event)}));xf._p(justep('openOldScan'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action23,'openOldScan', evt,false)});	
var xf_trigger_oldScan=new xforms.XFTrigger('oldScan',null,null,null,false,false,false,null,null,null);	
var xf_action_action22=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.oldScanClick(event)}));xf._p(justep('oldScan'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action22,'oldScan', evt,false)});	
var xf_trigger_getOldPic=new xforms.XFTrigger('getOldPic',null,null,null,false,false,false,null,null,null);	
var xf_action_action24=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){ConCamera.getOldPicClick(event)}));xf._p(justep('getOldPic'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action24,'getOldPic', evt,false)});	
}	
function load_view1_xblinit(){if (justep("view1").getAttribute('xblloaded') &amp;&amp; justep("view1").getAttribute('xblloaded') == 'true') return;justep("view1").setAttribute('xblloaded', 'true');	
}	
var __actions__ = {	
};	
</script>   </head>    <body class="xui-body" onload="if (window.justep &amp;&amp; justep.XBLObject)justep.XBLObject.init();" style="margin:0; padding:0;height:100%;width:100%;">     <div id="statusPanel"></div>      <span id="infoPanel" style="position:absolute;display:none"></span>      <div id="visible-element" style="height:100%;width:100%;">       <div class="" id="rootView" style="height:100%;width:100%">         <div class="component_8F7B2FA1 borderLayout" component="/UI/system/components/borderLayout.xbl.xml#borderLayout" id="borderLayout1" style="width:100%; height: 100%;;">           <div borderSize="0" class="xui-borderlayout-root">             <div class="xui-borderlayout-area xui-borderlayout-center" style="">               <div class="xui-container" id="view2" lazy="false" style="position:relative;;position:relative;width:100%;height:96%;">                 <div class="xui-container" id="contentHolder" style="height:323px;width:622px;">                   <section class="left" id="sectionId">                     <div id="commonDivId" style="clear: both; width: 1150px; height: 340px;border:1px solid blue">                       <div>                         <iframe height="0" name="FileScan3125cName" src="http://127.0.0.1:8080/test/oldTT.html" width="0"></iframe>                       </div>                        <div class="commonDivClass" id="scanDivId" style="clear: both; width: 100%; height: 100%;display:none;">                         <div id="objectDiv" style="display:none;">                           <object classid="clsid:677C2EAE-057E-4900-97ED-1520F080942D" id="DOcxtest1">                             <param NAME="_Version" VALUE="65536"></param>                              <param NAME="_ExtentX" VALUE="17463"></param>                              <param NAME="_ExtentY" VALUE="17727"></param>                              <param NAME="_StockProps" VALUE="0"></param>                           </object>                         </div>                       </div>                        <div id="cameraDivId" style="width: 39%; height: 100%;float:left;border:1px solid green;">                         <object classid="CLSID:454C18E2-8B7D-43C6-8C17-B1825B49D7DE" id="VideoInputCtl" style="width: 100%; height: 100%;"></object>                       </div>                        <div id="pictureDivId" style="width: 59%; height: 100%;float:right;border:1px solid red;">                         <img id="pictureImgId" src="/UI/ED/doc/process/dialog/ConCamera/data:image" style="clear: both; width: 100%; height: 100%;"></img>                       </div>                     </div>                   </section>                 </div>                  <div class="component_81F0BC01 windowReceiver" component="/UI/system/components/windowReceiver.xbl.xml#windowReceiver" id="ScanReceiver" onReceive="ConCamera.ScanReceiverReceive" style="position:absolute;top:248px;left:194px;">                   <script>
new justep.WindowReceiver('ScanReceiver');</script> 
                </div> 
              </div> 
            </div>  
            <div class="xui-borderlayout-area xui-borderlayout-bottom" size="147px" style=""> 
              <div class="xui-container" id="view1" lazy="false" style="position:relative;;position:relative;height:100%;width:103%;"> 
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="openPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:84px;top:46px;left:5px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default2">开启高拍仪</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="setPin1" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:76px;top:46px;left:97px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default3">设置分辨率</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="setPin2" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:68px;top:46px;left:184px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default4">设置属性</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="closePic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:86px;top:46px;left:261px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default5">关闭高拍仪</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="firstPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:46px;left:380px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default7">第一张</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="upPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:46px;left:457px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default8">上一张</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="nextPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:46px;left:710px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default9">下一张</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="lastPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:67px;top:46px;left:782px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default10">最后一张</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="xuanZhuanPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:78px;left:380px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default11">旋转</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="deletePic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:78px;left:782px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default12">删除</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="uploadPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:114px;left:710px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default13">上传</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="cancelP" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:114px;left:782px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default14">取消</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <input class="xui-input" id="fileName" style="position:absolute;width:232px;top:114px;left:458px;" type="text" value=""></input>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="upMove" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:78px;left:457px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default1">前移</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="nextMove" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:78px;left:710px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default15">后移</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="fasterSao" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:79px;top:113px;left:90px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label xforms-trigger-image " onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <i class="icon "></i>  
                          <span class="xforms-label " id="default16">开启扫描仪</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="getPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;top:78px;left:184px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default6">拍照</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_E1635FC7 gridSelect xforms-control xforms-gridselect1 xforms-appearance-minimal xui-select" id="picColor" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;height:23px;width:84px;top:78px;left:89px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="focus" style="display:none;width:0px"></td>  
                      <td class="xxf-value"> 
                        <div class="xforms-control xforms-ext-select" onmouseout="xforms.Core.setClass(this,'ext-select-mouse-over',false)" onmouseover="xforms.Core.setClass(this,'ext-select-mouse-over',true)"> 
                          <table border="0px" cellpadding="0px" cellspacing="0px" style="width:100%;height:100%;border:none;table-layout:fixed;"> 
                            <tr style="border:none"> 
                              <td style="width:100%;height:100%;border:none;"> 
                                <input accesskey="" class="xforms-ext-select-input" tabindex=""></input> 
                              </td>  
                              <td style="border:none" width="20px"> 
                                <img align="absMiddle" src="/form/images/combo_select.gif" style="margin-left:3px"></img> 
                              </td> 
                            </tr> 
                          </table> 
                        </div> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="textTo" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;height:23px;top:78px;left:539px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default17">移到</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <label class="xui-label" id="label1" style="position:absolute;top:117px;left:386px;">文件名：</label>  
                <label class="xui-label" id="label2" style="position:absolute;top:82px;left:660px;">张</label>  
                <input class="xui-input" id="textToNum" onafterpaste="this.value=this.value.replace(/\D/g,'')" onkeyup="this.value=this.value.replace(/\D/g,'')" style="position:absolute;position:absolute;width:29px;height:18px;top:78px;left:619px;" type="text" value=""></input>  
                <label class="xui-label" id="fileLabel" style="position:absolute;top:50px;left:559px;">当前无预览，共0张</label>  
                <label class="xui-label" id="label5" style="position:absolute;position:absolute;top:84px;left:8px;">照片格式：</label>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="fileScan" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:80px;top:113px;left:176px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default18">开始扫描</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="fileScanClose" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:80px;top:113px;left:266px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default19">关闭扫描仪</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_E1635FC7 gridSelect xforms-control xforms-gridselect1 xforms-appearance-minimal xui-select" id="gridSelect2" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:56px;top:115px;left:12px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="focus" style="display:none;width:0px"></td>  
                      <td class="xxf-value"> 
                        <div class="xforms-control xforms-ext-select" onmouseout="xforms.Core.setClass(this,'ext-select-mouse-over',false)" onmouseover="xforms.Core.setClass(this,'ext-select-mouse-over',true)"> 
                          <table border="0px" cellpadding="0px" cellspacing="0px" style="width:100%;height:100%;border:none;table-layout:fixed;"> 
                            <tr style="border:none"> 
                              <td style="width:100%;height:100%;border:none;"> 
                                <input accesskey="" class="xforms-ext-select-input" tabindex=""></input> 
                              </td>  
                              <td style="border:none" width="20px"> 
                                <img align="absMiddle" src="/form/images/combo_select.gif" style="margin-left:3px"></img> 
                              </td> 
                            </tr> 
                          </table> 
                        </div> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="SoScan" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:85px;top:78px;left:263px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default40">高清扫描</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="openOldScan" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:103px;top:46px;left:892px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default41">开启旧式扫描仪</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="oldScan" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:106px;top:78px;left:892px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default42">旧式扫描仪扫描</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table>  
                <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="getOldPic" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)" style="position:absolute;width:114px;top:113px;left:892px;;table-layout:fixed"> 
                  <tbody> 
                    <tr> 
                      <td class="xxf-value"> 
                        <button class="xui-button-label" onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                          <span class="xforms-label " id="default45">获取旧式扫描图像</span> 
                        </button> 
                      </td>  
                      <td class="xxf-alert"> 
                        <span class="xforms-alert"> 
                          <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                          <div class="xforms-alert-value" id=""></div> 
                        </span> 
                      </td> 
                    </tr> 
                  </tbody> 
                </table> 
              </div> 
            </div>  
            <div class="xui-borderlayout-border xui-borderlayout-border-bottom" style="height:0"></div> 
          </div> 
        </div> 
      </div> 
    </div>  
    <script type="text/javascript">
if (typeof(xforms.Dialog) != "undefined") { xforms.Dialog.show('statusPanel'); }</script> 
  </body> 
</html>
