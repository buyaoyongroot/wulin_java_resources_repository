•	上传 README 文件
如果在创建 Github 仓库时没有勾选创建 README.md 文件，则要先创建 README.md 文件，不然上传文件会报错。如果已经勾选，可以跳过此步骤。
$ git init
$ git clone https://github.com/wulin-challenge/bjhy_inline_office.git
$ touch README.md
$ git add README.md
$ git commit -m 'first_commit'

// 如果有可以先删除原来的地址
$ git remote remove origin # 删掉原来git源

$ git remote add origin https://github.com/jerryhanjj/baike_spider.git
$ git push origin master
•	上传项目
跟踪项目文件夹中的所有文件和文件夹
$ git add . 
输入本次的提交说明，准备提交暂存区中的更改的已跟踪文件，单引号内为说明内容
$ git commit -m 'first_commit'
关联远程仓库，添加后，远程库的名字就是 origin，这是 Git 默认的叫法，也可以改成别的，但是 origin 这个名字一看就知道是远程库。
$ git remote add origin https://github.com/jerryhanjj/baike_spider.git
如果关联出现错误 fatal: remote origin already exists，则执行下列语句再进行关联
git remote rm origin
把本地库的所有内容推送到远程库上
$ git push -u origin master
如果在推送时出现错误 error:failed to push som refs to.......，则执行下列语句
git pull origin master
出现 fatal: refusing to merge unrelated histories,就执行下面语句

git pull origin master --allow-unrelated-histories

将远程仓库 Github 上的文件拉下来合并之后重新推送上去


--allow-unrelated-histories

[http]
postBuffer = 524288000
或者采用命令
git config http.postBuffer 524288000   --这是500M

git config http.postBuffer 1073741824 --这是1G

===============================================================================================================================
git clone 时显示Filename too long的解决办法

在git bash中，运行下列命令： git config --global core.longpaths true

就可以解决该问题。

--global是该参数的使用范围，如果只想对本版本库设置该参数，只要在上述命令中去掉--global即可。

===============================================================================================================================
git回到指定版本命令
	git reset 是指将当前head的内容重置，不会留log信息。
	git reset HEAD filename  从暂存区中移除文件
	git reset --hard HEAD~3  会将最新的3次提交全部重置，就像没有提交过一样。
	git reset --hard [commit哈希值](38679ed709fd0a3767b79b93d0fba5bb8dd235f8)
	 回退到 38679ed709fd0a3767b79b93d0fba5bb8dd235f8 版本
	根据--soft --mixed --hard，会对working tree和index和HEAD进行重置:
	git reset --mixed：此为默认方式，不带任何参数的git reset，它回退到某个版本，只保留源码，回退commit和index信息
	git reset --soft：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可
	git reset --hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容

	例如：
	我要彻底返回在上一次提交以前的版本。git reset --hard HEAD~1
	我要回到上一次提交的版本：git reset --hard

===============================================================================================================================
git提交本地代码到新分支

	背景：
	从branchA分支拉了一份代码，做了一些修改，但是不想提交到branchA分支，想新建一个分支branchB保存代码。

	操作方法：
	添加本地需要提交代码

	提交本地代码
	git commit -m "add my code to new branchB"

	push 到git仓库
	git push origin branchA:branchB

	仓库中原本没有branchB，提交后会生成新分支branchB，并将本地基于branchA修改的代码提交到branchB中

	切换新分支(这个很重要)
	git checkout -b branchB 

===============================================================================================================================
git 命令行实现建立本地库 第一次上传提交代码,生成分支,提交代码到该分支(可参考)

	一:第一创建本地库,并且向远程第一次提交代码建立项目
		1.建立一个空的文件夹作为本地仓库
		2.进入该文件夹 cd /Users/zhanglizhi/Desktop/test本地库
	  3.git init   //作为git项目
		4.关联本地与远程仓库 git remote add origin https://github.com/zhanglizhi123/IvarTezt.git
	  5.第一次提交代码建立文件 touch REARD.md
	  6.git add REARD.md  //跟新
	  7.git commit -m "第一次提交” //提交本地库
	  8.第一次提交远程库生成master $git push -u origin master 
	  9.查看git log

	  10.第一次将项目文件脱入本地库
	  11.git add .  //跟新变动
	  12.git commit -m "提交代码scrollview”  //提交代码
	  13.建立分支new_分支 git checkout -b new_分支
	  14.查看分支  git branch
	  15.git push origin new_分支 将代码提交到改分支

	二:从远程拉取已经有的代码到本地并且建立新的本地库
	  1.进入想要建立本地库的目录下 cd /Users/zhanglizhi/Desktop/
	  2.从远程获取代码到本地库相应文件下(没有就自动建立文件名是 test2_本地库)  git clone https://github.com/zhanglizhi123/IvarTezt.git test2_本地库
	  3.进入该关联的本地库   cd /Users/zhanglizhi/Desktop/test2_本地库 
	  4.获取远程分支  git branch -a
	  5.拉取合并远程相应分支代码到本地  git pull origin new_分支
	  
===============================================================================================================================
































